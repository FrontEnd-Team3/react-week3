{"ast":null,"code":"var _jsxFileName = \"/Users/zivivle/Desktop/globaltest/src/domain/2_context/components/atom/Q1/Detail2.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { ModalContext } from \"../../../../../store/2_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContextQ1Detail2 = () => {\n  _s();\n  const modalContext = useContext(ModalContext);\n  const {\n    isModalOpen2,\n    setIsModalOpen2\n  } = modalContext;\n  const [isTextChange, setIsTextChange] = useState(\"보이기\");\n  const handleModalOpenToggle = () => {\n    setIsModalOpen2(!isModalOpen2);\n    setIsTextChange(isModalOpen2 ? \"숨기기\" : \"보이기\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ContextQ1Detail2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleModalOpenToggle,\n      children: isTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ContextQ1Detail2, \"ol/vmBIapt4PXWsGLUSPwXlMc2I=\");\n_c = ContextQ1Detail2;\nexport default ContextQ1Detail2;\nvar _c;\n$RefreshReg$(_c, \"ContextQ1Detail2\");","map":{"version":3,"names":["useContext","useState","ModalContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ContextQ1Detail2","_s","modalContext","isModalOpen2","setIsModalOpen2","isTextChange","setIsTextChange","handleModalOpenToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/zivivle/Desktop/globaltest/src/domain/2_context/components/atom/Q1/Detail2.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { ModalContext } from \"../../../../../store/2_context\";\n\nconst ContextQ1Detail2 = () => {\n  const modalContext = useContext(ModalContext);\n  const { isModalOpen2, setIsModalOpen2 } = modalContext;\n  const [isTextChange, setIsTextChange] = useState(\"보이기\");\n\n  const handleModalOpenToggle = () => {\n    setIsModalOpen2(!isModalOpen2);\n    setIsTextChange(isModalOpen2 ? \"숨기기\" : \"보이기\");\n  };\n\n  return (\n    <>\n      <h2>ContextQ1Detail2</h2>\n      <button onClick={handleModalOpenToggle}>{isTextChange}</button>\n    </>\n  );\n};\nexport default ContextQ1Detail2;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,YAAY,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,YAAY,GAAGT,UAAU,CAACE,YAAY,CAAC;EAC7C,MAAM;IAAEQ,YAAY;IAAEC;EAAgB,CAAC,GAAGF,YAAY;EACtD,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMa,qBAAqB,GAAGA,CAAA,KAAM;IAClCH,eAAe,CAAC,CAACD,YAAY,CAAC;IAC9BG,eAAe,CAACH,YAAY,GAAG,KAAK,GAAG,KAAK,CAAC;EAC/C,CAAC;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzBf,OAAA;MAAQgB,OAAO,EAAEN,qBAAsB;MAAAC,QAAA,EAAEH;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU;EAAA,gBAC9D;AAEP,CAAC;AAACX,EAAA,CAhBID,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAiBtB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}