{"ast":null,"code":"var _jsxFileName = \"/Users/zivivle/Downloads/rtktodo/src/pages/main/componetns/SignUp/Signup.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport BasicButton from '../../../../components/Button/Button';\nimport useInputs from '../../../../hooks/use-inputs';\nimport * as S from '../style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = _ref => {\n  _s();\n  let {\n    setIsFormLogin\n  } = _ref;\n  const [{\n    email,\n    password,\n    passowrdConfirm\n  }, onChangeForm] = useInputs({\n    email: '',\n    password: '',\n    passowrdConfirm: ''\n  });\n  const [isPasswordConfirm, setIsPasswordConfirm] = useState(false);\n  useEffect(() => {\n    if (password !== passowrdConfirm) return setIsPasswordConfirm(false);\n    setIsPasswordConfirm(true);\n  }, [password, passowrdConfirm]);\n\n  // const { disalbed, errors } = useAuthValidation(password, email)\n\n  const handleSignUpSumbit = e => {\n    e.preventDefault();\n    if (!email || !password) return;\n    if (!isPasswordConfirm) return;\n    alert('축하합니다. 회원가입이 완료되었습니다');\n    setIsFormLogin(true);\n  };\n\n  /* \n     errors : {\n         email : {message: 이메일 양식을 지켜주세요}\n         passwrod: {message: 비밀번호 양식을 지켜수에 }\n     }\n     */\n\n  /* \n         (기초)\n         email은 email 양식을 지켜야하며 (@ 포함)\n         password는 8글자 이상 작성 되어야한다.\n          password - passwordConfirm이 달라졌을 때 실시간으로\n         비밀번호와 비밀번호 확인이 다르지 않은지 확인하라는 에러 메세지\n         \n         BascicButton은\n         데이터가 모두 채워져있지 않으면 dsiabled\n         유효성이 검사되지 않으면 disabled --> 아이디와 비밀번호 양식을 확인해주세요 에러 메세지\n         비밀번호와 비밀번호 확인이 다르면 disabled --> CSS 속성도 변경 (회색)\n          login의 email 로직에도 똑같이 useInputs를 적용하고 유호성 적용 후\n         커스텀 훅으로 함수 재사용 할 것 \n          (1) state 최적화\n         (2) custom hook 작성법 (모듈화)\n         \n         +\n          (심화)\n         react-hook-from 이용하여 랜더링 최적화\n         단, 장단점을 정리하고 원하는 대로 효과를 거뒀는지 작성할 것\n         구현을 목표로 하지 말고 실무에서 자주 사용하는 라이브러리 이므로 확실하게 이해하는 것이 중요\n     */\n\n  return /*#__PURE__*/_jsxDEV(S.Form, {\n    children: [/*#__PURE__*/_jsxDEV(S.InputBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChangeForm,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(S.InputBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChangeForm,\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(S.InputBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChangeForm,\n        name: \"passowrdConfirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BasicButton, {\n      size: 'full',\n      shape: 'default',\n      variant: 'primary',\n      onClick: handleSignUpSumbit,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n_s(SignUpForm, \"xFSDKXo2DB6BcCDR2FaKLjPVXHM=\", false, function () {\n  return [useInputs];\n});\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["useEffect","useState","BasicButton","useInputs","S","jsxDEV","_jsxDEV","SignUpForm","_ref","_s","setIsFormLogin","email","password","passowrdConfirm","onChangeForm","isPasswordConfirm","setIsPasswordConfirm","handleSignUpSumbit","e","preventDefault","alert","Form","children","InputBox","fileName","_jsxFileName","lineNumber","columnNumber","onChange","name","size","shape","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/zivivle/Downloads/rtktodo/src/pages/main/componetns/SignUp/Signup.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport BasicButton from '../../../../components/Button/Button'\nimport useInputs from '../../../../hooks/use-inputs'\nimport * as S from '../style'\n\nconst SignUpForm = ({ setIsFormLogin }) => {\n\tconst [{ email, password, passowrdConfirm }, onChangeForm] = useInputs({\n\t\temail: '',\n\t\tpassword: '',\n\t\tpassowrdConfirm: '',\n\t})\n\n\tconst [isPasswordConfirm, setIsPasswordConfirm] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (password !== passowrdConfirm) return setIsPasswordConfirm(false)\n\t\tsetIsPasswordConfirm(true)\n\t}, [password, passowrdConfirm])\n\n\t// const { disalbed, errors } = useAuthValidation(password, email)\n\n\tconst handleSignUpSumbit = e => {\n\t\te.preventDefault()\n\t\tif (!email || !password) return\n\t\tif (!isPasswordConfirm) return\n\t\talert('축하합니다. 회원가입이 완료되었습니다')\n\t\tsetIsFormLogin(true)\n\t}\n\n\t/* \n    errors : {\n        email : {message: 이메일 양식을 지켜주세요}\n        passwrod: {message: 비밀번호 양식을 지켜수에 }\n    }\n    */\n\n\t/* \n        (기초)\n        email은 email 양식을 지켜야하며 (@ 포함)\n        password는 8글자 이상 작성 되어야한다.\n\n        password - passwordConfirm이 달라졌을 때 실시간으로\n        비밀번호와 비밀번호 확인이 다르지 않은지 확인하라는 에러 메세지\n        \n        BascicButton은\n        데이터가 모두 채워져있지 않으면 dsiabled\n        유효성이 검사되지 않으면 disabled --> 아이디와 비밀번호 양식을 확인해주세요 에러 메세지\n        비밀번호와 비밀번호 확인이 다르면 disabled --> CSS 속성도 변경 (회색)\n\n        login의 email 로직에도 똑같이 useInputs를 적용하고 유호성 적용 후\n        커스텀 훅으로 함수 재사용 할 것 \n\n        (1) state 최적화\n        (2) custom hook 작성법 (모듈화)\n        \n        +\n\n        (심화)\n        react-hook-from 이용하여 랜더링 최적화\n        단, 장단점을 정리하고 원하는 대로 효과를 거뒀는지 작성할 것\n        구현을 목표로 하지 말고 실무에서 자주 사용하는 라이브러리 이므로 확실하게 이해하는 것이 중요\n    */\n\n\treturn (\n\t\t<S.Form>\n\t\t\t<S.InputBox>\n\t\t\t\t<label>이메일</label>\n\t\t\t\t<input onChange={onChangeForm} name=\"email\" />\n\t\t\t</S.InputBox>\n\t\t\t<S.InputBox>\n\t\t\t\t<label>비밀번호</label>\n\t\t\t\t<input onChange={onChangeForm} name=\"password\" />\n\t\t\t</S.InputBox>\n\t\t\t<S.InputBox>\n\t\t\t\t<label>비밀번호 확인</label>\n\t\t\t\t<input onChange={onChangeForm} name=\"passowrdConfirm\" />\n\t\t\t</S.InputBox>\n\t\t\t<BasicButton\n\t\t\t\tsize={'full'}\n\t\t\t\tshape={'default'}\n\t\t\t\tvariant={'primary'}\n\t\t\t\tonClick={handleSignUpSumbit}\n\t\t\t>\n\t\t\t\t회원가입\n\t\t\t</BasicButton>\n\t\t</S.Form>\n\t)\n}\nexport default SignUpForm\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAO,KAAKC,CAAC,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,UAAU,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC,GAAAF,IAAA;EACrC,MAAM,CAAC;IAAEG,KAAK;IAAEC,QAAQ;IAAEC;EAAgB,CAAC,EAAEC,YAAY,CAAC,GAAGX,SAAS,CAAC;IACtEQ,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EAClB,CAAC,CAAC;EAEF,MAAM,CAACE,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjED,SAAS,CAAC,MAAM;IACf,IAAIY,QAAQ,KAAKC,eAAe,EAAE,OAAOG,oBAAoB,CAAC,KAAK,CAAC;IACpEA,oBAAoB,CAAC,IAAI,CAAC;EAC3B,CAAC,EAAE,CAACJ,QAAQ,EAAEC,eAAe,CAAC,CAAC;;EAE/B;;EAEA,MAAMI,kBAAkB,GAAGC,CAAC,IAAI;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACR,KAAK,IAAI,CAACC,QAAQ,EAAE;IACzB,IAAI,CAACG,iBAAiB,EAAE;IACxBK,KAAK,CAAC,sBAAsB,CAAC;IAC7BV,cAAc,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAMC,oBACCJ,OAAA,CAACF,CAAC,CAACiB,IAAI;IAAAC,QAAA,gBACNhB,OAAA,CAACF,CAAC,CAACmB,QAAQ;MAAAD,QAAA,gBACVhB,OAAA;QAAAgB,QAAA,EAAO;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClBrB,OAAA;QAAOsB,QAAQ,EAAEd,YAAa;QAACe,IAAI,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACbrB,OAAA,CAACF,CAAC,CAACmB,QAAQ;MAAAD,QAAA,gBACVhB,OAAA;QAAAgB,QAAA,EAAO;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBrB,OAAA;QAAOsB,QAAQ,EAAEd,YAAa;QAACe,IAAI,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACbrB,OAAA,CAACF,CAAC,CAACmB,QAAQ;MAAAD,QAAA,gBACVhB,OAAA;QAAAgB,QAAA,EAAO;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBrB,OAAA;QAAOsB,QAAQ,EAAEd,YAAa;QAACe,IAAI,EAAC;MAAiB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACbrB,OAAA,CAACJ,WAAW;MACX4B,IAAI,EAAE,MAAO;MACbC,KAAK,EAAE,SAAU;MACjBC,OAAO,EAAE,SAAU;MACnBC,OAAO,EAAEhB,kBAAmB;MAAAK,QAAA,EAC5B;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEX,CAAC;AAAAlB,EAAA,CAlFKF,UAAU;EAAA,QAC8CJ,SAAS;AAAA;AAAA+B,EAAA,GADjE3B,UAAU;AAmFhB,eAAeA,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}