{"ast":null,"code":"var _jsxFileName = \"/Users/zivivle/Downloads/rtktodo/src/components/Button/Button.js\";\nimport Button from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicButton = _ref => {\n  let {\n    size,\n    shape,\n    variant,\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    size: size,\n    shape: shape,\n    variant: variant,\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n_c = BasicButton;\nexport default BasicButton;\n\n//  <BasicButton size={\"full\"} color={\"red\"}>\n// 함수형 컴포넌트는 함수이기 때문에 매개변수를 전달 받을 수 있고\n// 매개변수는 컴포넌트에 설정한 속성과 속성값의 형태가 객체로 전달\n\n/* \n<BasicButton  size={\"full\"} onClick={onPressLogin} onMouseOver={}>\n    ... children\n</BasicButton>\n\n========================================================================\n\n나머지 매개변수\n\nfunction print(name, ...rest){\n    console.log(name, ...rest)\n}\nprint(\"김성용\", 20, 190)\n\n========================================================================\n\n💡 KeyPoint\n\n1. 함수형 컴포넌트는 매개변수로 전달된 *속성값*을 객체 형태로 받는다\n2. styled-compontent는 속성으로 전달된 값을 콜백함수의 인자로 꺼내쓸 수 있다\n3. 이를 이용하여 유동적인 css 변경이 가능하며 이를 통해 유동적인 공통 컴포넌트 만들 수 있다\n4. 나머지 매개변수를 통해 props를 통해 명시하지 않은 key 값도 전달 받을 수 있다\n\n========================================================================\n*/\nvar _c;\n$RefreshReg$(_c, \"BasicButton\");","map":{"version":3,"names":["Button","jsxDEV","_jsxDEV","BasicButton","_ref","size","shape","variant","children","rest","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zivivle/Downloads/rtktodo/src/components/Button/Button.js"],"sourcesContent":["import Button from './style'\n\nconst BasicButton = ({ size, shape, variant, children, ...rest }) => {\n\treturn (\n\t\t<Button size={size} shape={shape} variant={variant} {...rest}>\n\t\t\t{children}\n\t\t</Button>\n\t)\n}\nexport default BasicButton\n\n//  <BasicButton size={\"full\"} color={\"red\"}>\n// 함수형 컴포넌트는 함수이기 때문에 매개변수를 전달 받을 수 있고\n// 매개변수는 컴포넌트에 설정한 속성과 속성값의 형태가 객체로 전달\n\n/* \n<BasicButton  size={\"full\"} onClick={onPressLogin} onMouseOver={}>\n    ... children\n</BasicButton>\n\n========================================================================\n\n나머지 매개변수\n\nfunction print(name, ...rest){\n    console.log(name, ...rest)\n}\nprint(\"김성용\", 20, 190)\n\n========================================================================\n\n💡 KeyPoint\n\n1. 함수형 컴포넌트는 매개변수로 전달된 *속성값*을 객체 형태로 받는다\n2. styled-compontent는 속성으로 전달된 값을 콜백함수의 인자로 꺼내쓸 수 있다\n3. 이를 이용하여 유동적인 css 변경이 가능하며 이를 통해 유동적인 공통 컴포넌트 만들 수 있다\n4. 나머지 매개변수를 통해 props를 통해 명시하지 않은 key 값도 전달 받을 수 있다\n\n========================================================================\n*/\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGC,IAAA,IAAiD;EAAA,IAAhD;IAAEC,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAAL,IAAA;EAC/D,oBACCF,OAAA,CAACF,MAAM;IAACK,IAAI,EAAEA,IAAK;IAACC,KAAK,EAAEA,KAAM;IAACC,OAAO,EAAEA,OAAQ;IAAA,GAAKE,IAAI;IAAAD,QAAA,EAC1DA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAAC,EAAA,GANKX,WAAW;AAOjB,eAAeA,WAAW;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}